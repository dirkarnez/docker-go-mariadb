// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	Request
	Response
	LoginRequest
	LoginResponse
	Function
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Request) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Response struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// The request message containing the user's name.
type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response message containing the greetings
type LoginResponse struct {
	Token     string      `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Functions []*Function `protobuf:"bytes,2,rep,name=functions" json:"functions,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetFunctions() []*Function {
	if m != nil {
		return m.Functions
	}
	return nil
}

type Function struct {
	FunctionCd       string `protobuf:"bytes,1,opt,name=FunctionCd" json:"FunctionCd,omitempty"`
	ParentFunctionCd string `protobuf:"bytes,2,opt,name=ParentFunctionCd" json:"ParentFunctionCd,omitempty"`
	FunctionDesc     string `protobuf:"bytes,3,opt,name=FunctionDesc" json:"FunctionDesc,omitempty"`
}

func (m *Function) Reset()                    { *m = Function{} }
func (m *Function) String() string            { return proto.CompactTextString(m) }
func (*Function) ProtoMessage()               {}
func (*Function) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Function) GetFunctionCd() string {
	if m != nil {
		return m.FunctionCd
	}
	return ""
}

func (m *Function) GetParentFunctionCd() string {
	if m != nil {
		return m.ParentFunctionCd
	}
	return ""
}

func (m *Function) GetFunctionDesc() string {
	if m != nil {
		return m.FunctionDesc
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "auth.Request")
	proto.RegisterType((*Response)(nil), "auth.Response")
	proto.RegisterType((*LoginRequest)(nil), "auth.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "auth.LoginResponse")
	proto.RegisterType((*Function)(nil), "auth.Function")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// Sends a greeting
	SayHello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/auth.Auth/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) SayHello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/auth.Auth/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// Sends a greeting
	SayHello(context.Context, *Request) (*Response, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).SayHello(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _Auth_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0xe9, 0x3f, 0xdd, 0x3e, 0xdb, 0x22, 0xa3, 0x87, 0xa5, 0x07, 0x59, 0x72, 0xaa, 0x22,
	0x45, 0xea, 0x27, 0x28, 0x4a, 0xf1, 0xe0, 0x41, 0xb6, 0x9f, 0x20, 0x6e, 0x47, 0x5b, 0xac, 0xc9,
	0xba, 0x49, 0x10, 0xfd, 0xf4, 0xd2, 0x4d, 0xa2, 0x5b, 0x04, 0x2f, 0xde, 0xe6, 0xbd, 0xf9, 0x31,
	0x33, 0x2f, 0x01, 0xa4, 0xb3, 0xeb, 0x69, 0x59, 0x69, 0xab, 0xa9, 0xbb, 0xab, 0xc5, 0x1c, 0x87,
	0x39, 0xbf, 0x39, 0x36, 0x96, 0xc6, 0x48, 0x9c, 0xe1, 0x4a, 0xc9, 0x57, 0x4e, 0x5b, 0x59, 0x6b,
	0xd2, 0xcf, 0xbf, 0xf5, 0xae, 0x57, 0x4a, 0x63, 0xde, 0x75, 0xb5, 0x4a, 0xdb, 0xbe, 0x17, 0xb5,
	0xc8, 0x90, 0xe4, 0x6c, 0x4a, 0xad, 0x0c, 0xd3, 0x29, 0x7a, 0x56, 0xbf, 0xb0, 0x0a, 0x03, 0xbc,
	0x10, 0x0b, 0x0c, 0xee, 0xf5, 0xf3, 0x46, 0xfd, 0x77, 0xd3, 0x12, 0xc3, 0x30, 0xe7, 0xaf, 0x75,
	0x74, 0x89, 0xfe, 0x93, 0x53, 0x85, 0xdd, 0x68, 0x65, 0xd2, 0x76, 0xd6, 0x99, 0x1c, 0xcd, 0x46,
	0xd3, 0x3a, 0xf9, 0x22, 0xd8, 0xf9, 0x0f, 0x20, 0x3e, 0x91, 0x44, 0x9b, 0xce, 0x80, 0x58, 0xdf,
	0xac, 0xc2, 0xd0, 0x86, 0x43, 0x17, 0x38, 0x7e, 0x90, 0x15, 0x2b, 0xdb, 0xa0, 0xfc, 0x91, 0xbf,
	0x7c, 0x12, 0x18, 0x44, 0x75, 0xcb, 0xa6, 0x48, 0x3b, 0x35, 0xb7, 0xe7, 0xcd, 0x0a, 0x74, 0xe7,
	0xce, 0xae, 0xe9, 0x0a, 0xbd, 0x3a, 0x18, 0x91, 0xbf, 0xb3, 0xf9, 0x5a, 0xe3, 0x93, 0x3d, 0x2f,
	0x24, 0x3f, 0x47, 0xb2, 0x94, 0x1f, 0x77, 0xbc, 0xdd, 0x6a, 0x1a, 0x7a, 0x20, 0xf2, 0xa3, 0x28,
	0x3d, 0xfa, 0x78, 0x50, 0xff, 0xf7, 0xf5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xc2, 0xe7,
	0x46, 0xfd, 0x01, 0x00, 0x00,
}
